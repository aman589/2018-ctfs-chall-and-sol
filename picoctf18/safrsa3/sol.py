
def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
        gcd = b
    return gcd, x, y

def main():

    s = [2199924941,2244802423,2389668553,2410355069,2458577857,2464493777,2545447969,2694359207,2710173617,2731862333,2761663789,2907766843,2965977863,2966474167,3098696507,3121357969,3152345563,3299822899,3308409743,3406147471,3562714223,3642702991,3709806647,3747342707,3829983077,3952194737,3985427561,3989601013,4000385161,4175155427,4226636723,4238074541]
    y = []
    e = 65537


    
    n = 9107887638852436166243176729771975834796593348498786857015655695321440685655585302864073683169705043051268896978702339584301171925847313360689269318443289669482466536258222502555665627323334842032072469050017501307329885908285126528652391564339415295446910823755701779915555799746268679797643190785661073
    ct = 2892419939081788616009084735379629621085288461902407819193780974008216022520170667336963434648662593788313022869546036512005741269511067625558669941162263627666387438536424157222195303857121293806597286094091701721961563920720145954608154718169631726809912646872935328099622425089082671746953599972540571

    phi=1
    for i in s:
        phi*= i-1
    
    print(phi)
    # Compute modular inverse of e
    gcd, a, b = egcd(e, phi)
    d = a
    d = d % phi
    if (d < 0):
        d += phi

    print( "d:  " + str(d) )
    pt = hex(int(pow(ct, d, n)))[2:].replace("L","" ).decode('hex')
    # pt = pow(ct, d, n)
    print( "flag: " + pt )

if __name__ == "__main__":
    main()